version: "2"
services:
  postgres:
    image: dexels/dvdrental:1.0.7
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: mysecretpassword
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka:2.12-2.4.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_CREATE_TOPICS: "topic-config:10:1,offset-storage:10:1,MOCKUP-test-bare:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
  mongo:
    image: mongo:latest
    container_name: "mongo"
    environment:
      - MONGO_DATA_DIR=/data/db
    volumes:
      - ./mongodata:/data/db
    ports:
      - 27017:27017
    command: mongod # --quiet
  kafkamanager:
    image: hlebalbau/kafka-manager:2.0.0.2
    ports:
      - "9000:9000"
    environment:
      - ZK_HOSTS=zookeeper
      - ZOOKEEPER_IP=zookeeper
  connect:
    image: debezium/connect:1.0
    ports:
      - "8083:8083"
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
      - CONFIG_STORAGE_TOPIC=topic-config
      - OFFSET_STORAGE_TOPIC=offset-storage
  # stream:
  #   image: dexels/navajo-bare:4.5.0
  #   ports:
  #     - "8181:8181"
  #   environment:
  #     - CLUSTER=demo
  #     - CLUSTER_USE_DEFAULT_CLASSLOADER=true
  #     - DIRECT_SINK=false
  #     - ENABLE_TENANTLESS=true
  #     - FILE_REPOSITORY_DEPLOYMENT=test
  #     - FILE_REPOSITORY_FILEINSTALL=etc
  #     - FILE_REPOSITORY_MONITORED=streams
  #     - GIT_REPOSITORY_TYPE=any
  #     - KAFKA_STREAMS_THREADCOUNT=1
  #     - TOPIC_REPLICATION_COUNT=1
  #     - FILTER_INSTANCES=clubinstances,simple,address
  #     - GENERATION=2
  #     - HAZELCAST_SIMPLE=true
  #     - INSTANCENAME=instance-1
  #     - KAFKA_STREAMS_DISABLECACHE=true
  #     - PRETTY_JSON=true
  #     - REPLICATION_MESSAGE_FORMAT=JSON
  #     - TENANT_MASTER=MOCKUP
